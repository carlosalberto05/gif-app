{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","item","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAgBzC,OACE,mCACE,sBAAMC,SAXU,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAMd,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBlB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,e,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZhB,kBAgBdM,GAhBc,4CAAH,sDCWLO,EATK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAChC,OACE,sBAAKc,UAAU,6CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCoBKO,EAtBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDb2BK,CAAa1B,GAAjCa,EADkB,EACxBN,KAAca,EADU,EACVA,QAMtB,OACE,qCACE,oBAAIJ,UAAU,wCAAd,SAAuDhB,IACtDoB,GACC,mBAAGJ,UAAU,mCAAb,wBAEF,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACkB,GAAD,OACV,cAAC,EAAD,eAA+BA,GAAbA,EAAKhB,aEQlBiB,EAvBO,WAAO,IAAD,EACU1C,mBAAS,CAAC,gBADpB,mBACnB2C,EADmB,KACP5C,EADO,KAQ1B,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG4C,EAAWpB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCfxB8B,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.110dcff2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const hableSubmit = (e) => {\n    e.preventDefault()\n\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats])\n      setInputValue('')\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={hableSubmit}>\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n      </form>\n    </>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}\n\nexport default AddCategory\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category,\n  )}&limit=10&api_key=wneTugkEAwEDwElEghnrW5HlU5UXuJCM`\n\n  const resp = await fetch(url)\n  const { data } = await resp.json()\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url,\n    }\n  })\n\n  return gifs\n}\n","import React from 'react'\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeInDown\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem'\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category)\n\n  // useEffect(() => {\n  //   getGifs(category).then(setImages)\n  // }, [category])\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Loading...</p>\n      )}\n      <div className=\"card-grid\">\n        {images.map((item) => (\n          <GifGridItem key={item.id} {...item} />\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  })\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setstate({\n        data: imgs,\n        loading: false,\n      })\n    })\n  }, [category])\n\n  return state\n}\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst GiftExpertApp = () => {\n  const [categories, setCategories] = useState(['Dragon Ball'])\n\n  //   const handleAdd = () => {\n  //     // setCategories([...categories, 'Titanes'])\n  //     setCategories((cats) => [...cats, 'Titanes'])\n  //   }\n\n  return (\n    <>\n      <h2>GiftExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  )\n}\n\nexport default GiftExpertApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GiftExpertApp from './GiftExpertApp'\nimport './index.css'\n\nReactDOM.render(\n  <GiftExpertApp />,\n\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}